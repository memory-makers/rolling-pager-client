@use '@/styles/colors.scss' as colors;
@use '@/styles/core/_typography.scss' as txt;
.content {
  position: relative;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-flow: row dense;
  align-content: start;
  margin: 0 auto;
  padding: 16px;
  height: 100%;
}

.card {
  cursor: pointer;
  font-size: 16px;
  box-sizing: border-box;
  padding: 20px;
  width: 100%;
  min-width: 160px;
  min-height: 160px;
  aspect-ratio: 1 / 1;
  display: flex;
  align-items: center;
  justify-content: center;
  div {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
    word-wrap: break-word;
  }
  border-radius: 20px;
  @each $colorKey, $colorValue in colors.$colorMap {
    &.#{$colorKey} {
      background-color: $colorValue;
    }
  }
  @each $fontKey, $fontValue in txt.$fontFamilyMap {
    &.#{$fontKey} {
      font-family: $fontValue;
    }
  }
}

.card-modal {
  z-index: 20;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background: rgba(255, 255, 255, 0.8);
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  overflow-y: scroll;
  box-sizing: border-box;
  padding: 66px 16px 16px;
  margin-bottom: 66px;
  svg {
    cursor: pointer;
  }
}
.card-content {
  width: 100%;
  font-size: 32px;
  padding: 66px 40px;
  box-sizing: border-box;
  border-radius: 20px;
  @each $colorKey, $colorValue in colors.$colorMap {
    &.#{$colorKey} {
      background-color: $colorValue;
    }
  }
  @each $fontKey, $fontValue in txt.$fontFamilyMap {
    &.#{$fontKey} {
      font-family: $fontValue;
    }
  }
}
.text {
  @each $colorKey, $colorValue in colors.$colorMap {
    &.#{$colorKey} {
      color: $colorValue;
    }
  }
}
.card-btns {
  display: flex;
  align-items: center;
  margin-top: 66px;
  font-size: 32px;
  width: 100%;
  justify-content: space-between;
}
.close-btn {
  position: absolute;
  top: 100px;
  right: 20px;
}
.container {
  position: absolute;
  top: 0;
  left: 0;
}
.sticker {
  cursor: pointer;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  width: 60px;
  height: 60px;
  &.isFloating {
    position: absolute;
  }
  &.rnd {
    position: absolute;
  }
}
.border {
  position: absolute;
  top: -10px;
  left: -10px;
}
.delete-icn {
  width: 20px;
  height: 20px;
  z-index: 10;
  position: absolute;
  top: -38px;
  right: -35px;
}
.rotate-icn {
  width: 20px;
  height: 20px;
  z-index: 10;
  position: absolute;
  bottom: -30px;
  right: -30px;
}

.sticker-modal {
  position: absolute;
  z-index: 999;
  bottom: 0px;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: all 0.3s ease-out;
  &.isClosed {
    bottom: -400px;
    & div {
      opacity: 0;
      padding: 0;
    }
  }
}
.sticker-modal-content {
  transition: all 0.3s ease-out;
  opacity: 1;
  display: grid;
  width: 100%;
  height: 400px;
  background: rgba(0, 0, 0, 0.8);
  grid-template-columns: repeat(3, 1fr);
  padding: 30px;
  align-items: center;
  justify-items: center;
}

.sticker-modify-content {
  z-index: 100;
  width: 100%;
  position: absolute;
  height: 100%;
}
.sticker-content {
  width: 100%;
  position: absolute;
  height: 100%;
  pointer-events: none;
}

.sticker-container {
  position: relative;
  width: 100%;
}
